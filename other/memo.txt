(This file is updated by appending)

====
Random Walk(lazy or not) on undirected graph, converges to a trivial distribution: pi(i) = degree(i)/(2|E|). Note that in our former project, the better set of PR computes on the undirected version. We can test the ROC of pi(i), and compare it with PR(not PPR).  

====
How to handle rank leakage problem?
   * For single dangling node, a self loop can be added. (It's possible to become sink now). 
   * Any single node or a set of node forming strongly connected components with no out-going links is a sink. In stationary distribution, probability will focus on these sinks. Reverse links can be added to alleviate the problem, which induces the undirected version of original graph. 
   * To deal with sinks, introducing supernode also works. What's more, the introduction of super node increases computation complexity by a trivial amount. 

====
Use the technique of recovering hidden clique:
   * [previours result] Take second eigenvector and the first sqrt(n) entries overlap with the clique, w.h.p. [Spectral Algorithm Course]
   * Spectral partitioning of semi-random graphs. [McSherry, 2002] 

Justification: real community is very close to "clique". We can model the whole network as several hidden cliques with other randomly added inter-community edges. In our 2-hop local problem, we're also interested in the clique centered at observer. 

====
Suggested outline:
1. Motivating problem. 
2. Describe different methods with mathematical explanation. 
3. Predict whether they match the current problem. 
4. Experimental evaluation. (future)

====
Technical content:
1. Effective resistance:
    http://www.cs.yale.edu/homes/spielman/462/lect13-10.pdf 
2. Spectral embedding. 
3. Spectral clustering. 
4. PageRank, PPR. 

